{"version":3,"sources":["pages/MovieDetails.module.css","components/MovieCard.module.css","searchMovie/SearchMovies.module.css","App.module.css","components/MoviesGrid.module.css","components/MovieCard.jsx","components/MoviesGrid.jsx","searchMovie/SearchMovies.jsx","utils/httpsClient.js","pages/HomePage.jsx","pages/MovieDetails.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","MovieCard","movie","movieUrl","poster_path","className","styles","movieCard","to","id","width","height","movieImage","src","alt","title","MoviesGrid","movies","moviesGrid","map","SearchMovies","action","Grid","container","direction","alignItems","justifyContent","item","xs","InputLabel","label","TextField","type","variant","onChange","placeholder","get","path","fetch","headers","Authorization","then","result","json","HomePage","useState","currentMovies","setMovies","copyMovies","setCopyMovies","useEffect","data","results","e","target","value","x","filter","z","toLowerCase","includes","onChangeSearch","MovieDetails","movieId","useParams","setMovie","imageUrl","detailsContainer","col","movieDetails","firstItem","genres","genre","name","join","overview","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5964b6fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsContainer\":\"MovieDetails_detailsContainer__3TLWR\",\"col\":\"MovieDetails_col__1LaC8\",\"movieImage\":\"MovieDetails_movieImage__3pMHE\",\"movieDetails\":\"MovieDetails_movieDetails__1_8jb\",\"firstItem\":\"MovieDetails_firstItem__cAQ89\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieCard\":\"MovieCard_movieCard__kKtcG\",\"movieImage\":\"MovieCard_movieImage__2IQec\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchMovies_container__d48b5\",\"label\":\"SearchMovies_label__dm4M4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3v88M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviesGrid\":\"MoviesGrid_moviesGrid__1-_sf\"};","import { Link } from \"react-router-dom\";\r\nimport styles from \"./MovieCard.module.css\";\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  const movieUrl = \"https://image.tmdb.org/t/p/w300\" + movie.poster_path;\r\n\r\n  return (\r\n    <li className={styles.movieCard}>\r\n      <Link to={\"/movies/\" + movie.id}>\r\n        <img\r\n          width={230}\r\n          height={345}\r\n          className={styles.movieImage}\r\n          src={movieUrl}\r\n          alt={movie.title}\r\n        />\r\n        <div> {movie.title} </div>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import MovieCard from \"./MovieCard\";\r\nimport styles from \"./MoviesGrid.module.css\";\r\n\r\nconst MoviesGrid = ({ movies }) => {\r\n  return (\r\n    <ul className={styles.moviesGrid}>\r\n      {movies.map((movie) => (\r\n        <MovieCard key={movie.id} movie={movie} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default MoviesGrid;\r\n","import React from \"react\";\r\nimport { Grid, TextField, InputLabel } from \"@material-ui/core\";\r\nimport styles from \"../searchMovie/SearchMovies.module.css\";\r\n\r\nconst SearchMovies = ({ action }) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      item\r\n      xs={12}\r\n    >\r\n      <InputLabel className={styles.label}>Search:</InputLabel>\r\n      <TextField\r\n        className={styles.container}\r\n        type=\"text\"\r\n        variant=\"outlined\"\r\n        onChange={action}\r\n        placeholder=\"Search Movie\"\r\n      ></TextField>\r\n    </Grid>\r\n  );\r\n};\r\nexport default SearchMovies;\r\n","const API = \"https://api.themoviedb.org/3\";\r\n\r\nexport function get(path) {\r\n  return fetch(API + path, {\r\n    headers: {\r\n      Authorization:\r\n        \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3N2FhMzhjNGJhMzQwZjQ4MWYxOTQ5OTkzMTU3YTFlMiIsInN1YiI6IjYxMDRlMTY1ZjcwNmRlMDAyNmMyYWQ4NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.6GgrCmB642kdhH8vkN3fYCA__Y0zU4tm4RHd5WzCh4Y\",\r\n      \"Content-Type\": \"application/json;charset=utf-8\",\r\n    },\r\n  }).then((result) => result.json());\r\n}\r\n","import MoviesGrid from \"../components/MoviesGrid\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport SearchMovies from \"../searchMovie/SearchMovies\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { get } from \"../utils/httpsClient\";\r\n\r\nconst HomePage = () => {\r\n  const onChangeSearch = (e) => {\r\n    if (e.target.value === \"\") {\r\n      setMovies(copyMovies);\r\n    } else {\r\n      const x = currentMovies.filter((z) => {\r\n        return z.title.toLowerCase().includes(e.target.value.toLowerCase());\r\n      });\r\n      setMovies(x);\r\n    }\r\n  };\r\n\r\n  const [currentMovies, setMovies] = useState([]);\r\n  const [copyMovies, setCopyMovies] = useState([]);\r\n  useEffect(() => {\r\n    get(\"/discover/movie\").then((data) => {\r\n      setMovies(data.results);\r\n      setCopyMovies(data.results);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <Grid item xs={12}>\r\n          <SearchMovies action={(e) => onChangeSearch(e)} />\r\n        </Grid>\r\n      </header>\r\n      <main>\r\n        <MoviesGrid movies={currentMovies} />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { get } from \"../utils/httpsClient\";\r\nimport styles from \"./MovieDetails.module.css\";\r\n\r\nconst MovieDetails = () => {\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    get(\"/movie/\" + movieId).then((data) => {\r\n      setMovie(data);\r\n    });\r\n  }, [movieId]);\r\n\r\n  if (!movie) {\r\n    return null;\r\n  }\r\n  const imageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\r\n\r\n  return (\r\n    <div className={styles.detailsContainer}>\r\n      <img\r\n        className={`${styles.col} ${styles.movieImage}`}\r\n        src={imageUrl}\r\n        alt={movie.title}\r\n      />\r\n      <div className={`${styles.col} ${styles.movieDetails}`}>\r\n        <p className={styles.firstItem}>\r\n          <strong>Title:</strong> {movie.title}\r\n        </p>\r\n        <p>\r\n          <strong>Genres:</strong>{\" \"}\r\n          {movie.genres.map((genre) => genre.name).join(\", \")}\r\n        </p>\r\n        <p>\r\n          <strong>Description:</strong> {movie.overview}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import styles from \"./App.module.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport MovieDetails from \"./pages/MovieDetails\";\n\nfunction App() {\n  return (\n    <Router>\n      <header>\n        <Link to=\"/\">\n          <h1 className={styles.title}>Movies</h1>\n        </Link>\n      </header>\n      <main>\n        <Switch>\n          <Route exact path=\"/movies/:movieId\">\n            <MovieDetails />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}